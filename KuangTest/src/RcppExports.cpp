// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// kuangtest
double kuangtest(arma::vec run, double median, bool bigdata);
RcppExport SEXP _KuangTest_kuangtest(SEXP runSEXP, SEXP medianSEXP, SEXP bigdataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type run(runSEXP);
    Rcpp::traits::input_parameter< double >::type median(medianSEXP);
    Rcpp::traits::input_parameter< bool >::type bigdata(bigdataSEXP);
    rcpp_result_gen = Rcpp::wrap(kuangtest(run, median, bigdata));
    return rcpp_result_gen;
END_RCPP
}
// Kfairnesstest
arma::mat Kfairnesstest(arma::vec rank, int max, std::string method, double alpha);
RcppExport SEXP _KuangTest_Kfairnesstest(SEXP rankSEXP, SEXP maxSEXP, SEXP methodSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type rank(rankSEXP);
    Rcpp::traits::input_parameter< int >::type max(maxSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(Kfairnesstest(rank, max, method, alpha));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_KuangTest_kuangtest", (DL_FUNC) &_KuangTest_kuangtest, 3},
    {"_KuangTest_Kfairnesstest", (DL_FUNC) &_KuangTest_Kfairnesstest, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_KuangTest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
